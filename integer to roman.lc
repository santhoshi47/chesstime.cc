import java.util.TreeMap;

public class Solution {

 public final static TreeMap<Integer,String> map = new TreeMap<Integer,String>();

     {

        map.put(1000, "M");
        map.put(900, "CM");
        map.put(500, "D");
        map.put(400, "CD");
        map.put(100, "C");
        map.put(90, "XC");
        map.put(50, "L");
        map.put(40, "XL");
        map.put(10, "X");
        map.put(9, "IX");
        map.put(5, "V");
        map.put(4, "IV");
        map.put(1, "I");

    }
//floor key returns highest number inthat value. for ex 58 it returns 50 using floor key//
    public final static String intToRoman(int number) {
        int l =  map.floorKey(number);
        if ( number == l ) {
            return map.get(number);
        }
        return map.get(l) + intToRoman(number-l);
    }
public static void main(String args[])
{
    Solution r=new Solution();
    r.intToRoman(58);
}
}
